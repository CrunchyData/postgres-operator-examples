---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "install.labels" . | nindent 4 }}
    {{- include "install.clusterLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  strategy: { type: Recreate }
  selector:
    matchLabels:
      {{- include "install.clusterLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "install.clusterLabels" . | nindent 8 }}
        {{- include "install.customPodLabels" . | nindent 8 }}
    spec:
      {{- include "install.imagePullSecrets" . | indent 6 }}
      serviceAccountName: {{ include "install.serviceAccountName" . }}
      containers:
      - name: operator
        image: {{ required ".Values.controllerImages.cluster is required" .Values.controllerImages.cluster | quote }}
        env:
          - name: PGO_INSTALLER
            value: helm
          - name: PGO_INSTALLER_ORIGIN
            value: examples-repo
          - name: PGO_CONTROLLER_LEASE_NAME
            value: {{ .Values.pgoControllerLeaseName }}
        {{- if .Values.envOverride }}
        {{- toYaml .Values.envOverride | nindent 10 }}
        {{- else -}}
        {{- include "install.defaultEnv" . | nindent 10 }}
        {{- end }}
        {{- if .Values.extraEnv }}
        {{- toYaml .Values.extraEnv | nindent 10 }}
        {{- end }}
        {{- if .Values.resources.controller }}
        resources:
        {{- toYaml .Values.resources.controller | nindent 10 }}
        {{- end }}
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          allowPrivilegeEscalation: false
          capabilities: { drop: [ALL] }
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        livenessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
